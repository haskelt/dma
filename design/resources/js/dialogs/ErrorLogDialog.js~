{{globals.js_copyright_notice}}

import message_dispatcher from '../logger/MessageDispatcher.js?v={{globals.version}}';
import Dialog from './Dialog.js?v={{globals.version}}';

class ErrorLogDialog extends Dialog {

    static prefix = {
        'ERROR': '! ',
        'WARN': '? ',
        'INFO': '',
        'DEBUG': '  %% ',
        'TRACE': '    ++ '
    };
    
    /**************************************************************************/

    static initialize () {

	/* if there is more than one error log in the document,
	   only the first one will be initialized */
	this.element = document.querySelector('#error-log');
	if(this.element){
	    console.log('init error log');
	    this.errorLogElement = this.element.querySelector('.dialogs__content-area');
	    this.element.querySelector('.dialogs__ok-button').addEventListener('click', this.handleOK.bind(this));
	    message_dispatcher.subscribe('TRACE', this.handleMessage.bind(this));
	    window.addEventListener('error', this.handleError.bind(this));
	}
	
    } // initialize

    /**************************************************************************/

    static handleMessage (level, namespace, message) {

	var messageNode = document.createElement('span');
	messageNode.innerText = `<${namespace}> ${message}`;
	messageNode.classList.add(level.toLowerCase());
	this.errorLogElement.appendChild(messageNode);

    } // handleMessage
    
    /**************************************************************************/

    static handleError (error) {

	super.show();
	console.log(`error caught ${error.message}`);
	
    } // handleError
    
    /**************************************************************************/
    
    static handleOK () {

	super.hide();
	
    } // handleOK
    
    /**************************************************************************/

} // ErrorLogDialog

ErrorLogDialog.initialize();
export default ErrorLogDialog;

